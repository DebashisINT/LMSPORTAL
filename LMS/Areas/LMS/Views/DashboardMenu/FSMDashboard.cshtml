<!--====================================================== Revision History ==============================================
Rev Number   DATE            VERSION     DEVELOPER       CHANGES
1.0          06-01-2023      2.0.37      pallab          25570: show button position change
2.0          30-03-2023      2.0.39      pallab          25767: When attendance tab active by default, showing wrong tab details
3.0          05-04-2023      V2.0.40     Sanchita        ITC user dashboard is taking too much time to respond
                                                         for AE & AM users login credentials. refer: 25781
4.0          21-04-2023      V2.0.40     Pallab          FSM Dashboard Visit tab console error. refer: 25878
5.0          22-06-2023      V2.0.41     Pallab          FSM dashboard tab boxes click event disable, when "show data" button not clicked. refer: 26413
6.0          07-07-2023      V2.0.42     Pallab          FSM dashboard tab data not coming in ITC, when "Employees On Leave" box hide. refer: 26529
7.0          07-07-2023      V2.0.42     Sanchita        FSM Dashboard - Hierarchy Tab - Console error when clicked on Show Data. Refer: 26530
8.0          10-07-2023      V2.0.42     Pallab          When show data button not clicked, show a message, when box click. Refer: 26538
9.0          03-08-2023      V2.0.42     Pallab          Clicked state or branch selection without click "show data" button, tab box number data showing, disable click event. Refer: 26663
10.0         04-08-2023      V2.0.42     Sanchita        Data not comming in Field Visit and Team Visit tab when Visit tab is off. Mantis : 26672
11.0         21-03-2024      V2.0.46     Sanchita        A new dashboard floating menu is required as "View Geography". Mantis: 27322
12.0         21-03-2024      V2.0.46     Sanchita        A new dashboard floating icon is required as "View Geotrack"..Mantis: 27323
13.0         21-08-2024      V2.0.48     Priti           LMS Dashboard.Mantis: 0027667
14.0         08-10-2024      V2.0.49     Priti           0027753: In LMS Dashboard, the count of the Assigned topics will be all the topics under whom at least one content is mapped
                                                         code changes accouding to discussion with Gautam da
15.0         17-10-2024      V2.0.49     Priti           Excel download format not showing in dashboard.Mantis: 0027767

====================================================== Revision History ==============================================-->

@model LMS.Models.FSMDashBoardFilter


@{
    ViewBag.Title = "Field Sales Management Dashboard";
    var weburl = System.Configuration.ConfigurationSettings.AppSettings["Weburlmarker"];
    System.Data.DataTable db = new System.Data.DataTable();
    db = null;
}
<link href="~/Scripts/pluggins/multiselect/bootstrap-multiselect.css" rel="stylesheet" />
@*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCbYMZjnt8T6yivYfIa4_R9oy-L3SIYyrQ"></script>*@
@*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCbYMZjnt8T6yivYfIa4_R9oy - L3SIYyrQ"></script>*@
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCbYMZjnt8T6yivYfIa4_R9oy - L3SIYyrQ"></script>
@*REV 13.0*@
@*<script src="~/assests/js/raphael.min.js"></script>
    <script src="~/assests/js/justgage.js"></script>*@

@*<script src="https://cdn.jsdelivr.net/npm/gaugeJS@1.3.7/dist/gauge.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>*@

<script src="~/assests/js/gauge.min.js"></script>
<script src="~/assests/js/chart_lms.js"></script>
@*REV 13.0 END*@
<link href="~/Scripts/Charts/styles.css" rel="stylesheet" />
<link href="~/Content/media.css" rel="stylesheet" />
@*<script src="~/Scripts/Charts/apexcharts.min.js"></script>*@
<link href="~/assests/pluggins/LightBox/lightbox.css" rel="stylesheet" />
<script src="~/assests/pluggins/LightBox/lightbox.js"></script>
<script src="~/Scripts/pluggins/multiselect/bootstrap-multiselect.js"></script>
@*<link href="https://cdn.lineicons.com/2.0/LineIcons.css" rel="stylesheet">*@
<link href="~/assests/pluggins/LineIcons/font-css/LineIcons.css" rel="stylesheet" />


<link href="~/assests/css/FsmDashboard.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css?family=Fira+Sans:200,300,400,500,600|Montserrat:300,400,500,600,700|Open+Sans+Condensed:300,700|Open+Sans:300,400,600,700" rel="stylesheet">
<script>
    //REV 13.0
    var LMSstateids = [];
    var LMSbranchids = [];
    var isShowVisitDataClicked = false;
    var Action = "";

    function OnTotalLearnersClick(elem) {




         if (!isShowVisitDataClicked) {
             Swal.fire({
                 /*position: 'top',*/
                 title: 'Please select show data first, then view the details from here. Thanks.',
                 showConfirmButton: false,
                 timer: 2000,
                 customClass: "show-data-msg"
             })
             return;
         }

         document.getElementById("griddetailsLMS").style.display = "block";
         $('#dashDetailsLMS').removeClass('hide');
         $('.boxWidget').removeClass('activeW');

        $("#toggle-show-hide").show();

         $('#collapseTwo').addClass('in');
            $('#backSpn').attr("Style", "Display:none;");

            if (elem == "TOTALUSERLIST") {
                $("#griddetailsHeadedtextLMS").text("Learning analytics");
                /*rev Pallab*/
                $('.widgBox').removeClass('active');
                $('#lms-btn-4').addClass('active');
                /*rev end Pallab*/
            }
            else if (elem == "YETTOSTART") {
                $("#griddetailsHeadedtextLMS").text("Total Learners");
                /*rev Pallab*/
                $('.widgBox').removeClass('active');
                $('#lms-btn-2').addClass('active');
                /*rev end Pallab*/
            }
            else if (elem == "AssignedTopic") {
                $("#griddetailsHeadedtextLMS").text("Total Learners");
                /*rev Pallab*/
                $('.widgBox').removeClass('active');
                $('#lms-btn-1').addClass('active');
                /*rev end Pallab*/
            }
            else if (elem == "TOTALUSERPENDINGLIST") {
                $("#griddetailsHeadedtextLMS").text("In Progress");
                /*rev Pallab*/
                $('.widgBox').removeClass('active');
                $('#lms-btn-3').addClass('active');
                /*rev end Pallab*/
            }
            else if (elem == "TOTALUSERCOMPLETEDLIST") {
                $("#griddetailsHeadedtextLMS").text("Completed");
                /*rev Pallab*/
                $('.widgBox').removeClass('active');
                $('#lms-btn-5').addClass('active');
                /*rev end Pallab*/
                }

        Action = elem;
        if (elem == "YETTOSTART") {
            Action = "TOTALUSERLIST";
        }
        if (elem == "AssignedTopic") {
            Action = "TOTALUSERLIST";
        }


         gridList.Refresh();
         gridList.Refresh();
    }


    function OnStartCallbackLMS(s, e) {

        //let newBranch = $('#cmbBranchLMS').val();
        //var isObject = typeof newBranch
        //if (isObject == "object") {
        //    if (newBranch != null && newBranch.length > 0) {
        //        LMSbranchids = newBranch.join(',');
        //    } else {
        //        LMSbranchids = "";

        //    }
        //} else {
        //    if (newBranch != null && newBranch.length > 0) {
        //        LMSbranchids = newBranch;
        //    }
        //    else {
        //        LMSbranchids = "";
        //    }
        //}

        e.customArgs["ActionType"] = Action;
        e.customArgs["STATEIDS"] = LMSstateids.join(',') ;
        e.customArgs["BRANCHIDS"] = LMSbranchids.join(',');

    }
    function LMSgriddashboardgridviewexport() {
    var url = '@Url.Action("LMSExportDashboardGridView", "DashboardMenu", new { type = "_type_" })';
    // debugger;
        var Headedtext = $("#griddetailsHeadedtextLMS").text();
    url = url.replace("_type_", 3);
    url = url + "&Name=" + Headedtext;
    window.location.href = url;

    //window.location.href = url.replace("_type_", 3, "_Name_", $("#griddetailsHeadedtext").text());
    }





    $(document).ready(function () {

        $('#cmbStateLMS').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            maxHeight: 400,
            enableCaseInsensitiveFiltering: true,
            onDropdownHide: function (event) {
                console.log("on hide");
                GetSateValueLMS();
            }
        }).multiselect('selectAll', false).multiselect('updateButtonText');


        $('#cmbBranchLMS').multiselect({
            includeSelectAllOption: true,
            enableFiltering: true,
            maxHeight: 400,
            enableCaseInsensitiveFiltering: true,
            onDropdownHide: function (event) {
                GetBranchValueLMS();
            }
        }).multiselect('selectAll', false).multiselect('updateButtonText');
        LMSbranchids = $('#cmbBranchLMS').val();
        LMSstateids = $('#cmbStateLMS').val();

        var statelistcount = $('#hdnStateListCountLMS').val();
        if (statelistcount > 0) {
            for (var i = objsettings.length - 1; i >= 0; i--) {
                if (objsettings[i].ID == settingsid) {
                    objsettings.splice(i, 1);
                }
            }

        }
        else {
            $('.bodymain_areastatewise').hide();
        }

    });
    function GetSateValueLMS() {
        console.log("state value");
        LMSstateids = [];

        var datalist = $('#cmbStateLMS').val();
        if (datalist != null) {
            LMSstateids = datalist;
        }
        else {
            LMSstateids.push('999999');
        }
        cmbStatechangeLMS();
    }
    function cmbStatechangeLMS() {

        if (!isShowVisitDataClicked) {
            return;
        }
        settingsid = "1";
        for (var i = objsettings.length - 1; i >= 0; i--) {
            if (objsettings[i].ID == settingsid) {
                objsettings.splice(i, 1);
            }
        }
        if (settingsid == "1") {
            stateid = LMSstateids.join(','); //;cmbState.GetValue();
            var obj1 = {};

            obj1.stateid = stateid;
            var Url = '@Url.Action("DashboardBranchComboboxLMS", "DashboardMenu")'
            $.ajax({
                type: "POST",
                //url: "/DashboardMenu/DashboardBranchComboboxLMS",
                url: Url,
                data: JSON.stringify(obj1),
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    const mainData = response.map(function (item) {
                        return {
                            label: item.name,
                            title: item.name,
                            value: item.BranchID,
                            selected: true
                        }
                    })

                    $("#cmbBranchLMS").multiselect('dataprovider', mainData);
                    //var newBranch = $('#cmbBranchLMS').val();
                    //var isObject = typeof newBranch
                    //if (isObject == "object") {
                    //    if (newBranch != null && newBranch.length > 0) {
                    //        LMSbranchids = newBranch.join(',');
                    //    } else {
                    //        LMSbranchids = "";
                    //    }
                    //} else {
                    //    if (newBranch != null && newBranch.length > 0) {
                    //        LMSbranchids = newBranch;
                    //    }
                    //    else {
                    //        LMSbranchids = "";
                    //    }
                    //}
                   // reloadBoxData(LMSbranchids);
                },
                error: function (response) {
                    jAlert("Please try again later");
                }
            });

        }
    }

    function GetBranchValueLMS() {
        LMSbranchids = [];

        var datalist = $('#cmbBranchLMS').val();
        if (datalist != null) {
            LMSbranchids = datalist;
        }
        else {
            LMSbranchids.push('999999');
        }
        cmbBranchChangeLMS();
    }
    function cmbBranchChangeLMS() {

        if (!isShowVisitDataClicked) {
            return; // Disable click event
        }
        //let newBranch = $('#cmbBranchLMS').val();
        //var isObject = typeof newBranch
        //if (isObject == "object") {
        //    if (newBranch != null && newBranch.length > 0) {
        //        LMSbranchids = newBranch.join(',');
        //    } else {
        //        LMSbranchids = "";

        //    }
        //} else {
        //    if (newBranch != null && newBranch.length > 0) {
        //        LMSbranchids = newBranch;
        //    }
        //    else {
        //        LMSbranchids = "";
        //    }
        //}
        // reloadBoxData(LMSbranchids);
        ShowLMSData();
        gridList.Refresh();
    }
    function ShowLMSData() {

        isShowVisitDataClicked = true;
        $('#lms-btn-4').addClass('zoom');
        $('#lms-btn-1').addClass('zoom');
        $('#lms-btn-2').addClass('zoom');
        $('#lms-btn-3').addClass('zoom');
        $('#lms-btn-5').addClass('zoom');



        WindowSize = $(window).width();

        $(".visit-tb-hand").hide();
        $("#lblTotalLearners").html("<img src='/assests/images/Spinner.gif' />");
        $("#lblAssignedTopics").html("<img src='/assests/images/Spinner.gif' />");
        $("#lblYettoStart").html("<img src='/assests/images/Spinner.gif' />");
        $("#lblInProgress").html("<img src='/assests/images/Spinner.gif' />");
        $("#lblCompleted").html("<img src='/assests/images/Spinner.gif' />");

        //var branchidids = "";
        //var isObject = typeof LMSbranchids
        //if (isObject == "object") {
        //    if (LMSbranchids != null && LMSbranchids.length > 0) {
        //        branchidids = LMSbranchids.join(',');
        //    } else {
        //        branchidids = "";

        //    }
        //} else {
        //    if (LMSbranchids != null && LMSbranchids.length > 0) {
        //        branchidids = LMSbranchids;
        //    }
        //    else {
        //        branchidids = "";
        //    }
        //}

        objData = {};

        var hdnLMS = $('#hdnLMS').val();
        var obj = {};
        obj.stateid = LMSstateids.join(',');
        obj.branchid = LMSbranchids.join(',');;

        if (hdnLMS > 0) {
            var Url = '@Url.Action("GETLMSCOUNTDATA", "DashboardMenu")'

            $.ajax({
                type: "POST",
                //url: "/DashboardMenu/GETLMSCOUNTDATA",
                url: Url,
                data: JSON.stringify(obj),
                async: true,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var g = '';

                    $("#gaugeCanvas").html("");

                    $("#lblTotalLearners").html(response.TotalLearners);

                    $("#lblAssignedTopics").html(response.AssignedTopics);

                    $("#lblYettoStart").html(response.YettoStart);

                    $("#lblInProgress").html(response.InProgress);

                    $("#lblCompleted").html(response.Completed);
                    /*$("#lblAverageProgress").html(response.AverageProgress);*/
                    $("#lblAverageProgress").html("Progress: " + response.AverageProgress + "%");

                    /*rev Pallab*/

                    //g = new JustGage({
                    //    id: "gauge",
                    //    value: response.AverageProgress,
                    //    min: 0,
                    //    max: 100,
                    //    hideValue: true,
                    //    title: "",
                    //    levelColors: ["#76FF03"],
                    //});

                    //Rev 14.0
                    $(".lms-chart-box").show();
                    //Rev 14.0 End

                    var opts = {
                        angle: 0, // The span of the gauge arc
                        lineWidth: 0.3, // The line thickness
                        radiusScale: 1, // Relative radius
                        pointer: {
                            length: 0.6, // Relative to gauge radius
                            strokeWidth: 0.035, // The thickness
                            color: '#000000' // Pointer color
                        },
                        limitMax: false,     // If false, max value increases automatically if value > maxValue
                        limitMin: false,     // If true, the min value of the gauge will be fixed
                        colorStart: '#6FADCF',   // Colors
                        colorStop: '#8FC0DA',    // Just experiment with them
                        strokeColor: '#E0E0E0',  // To see which ones work best for you
                        generateGradient: true,
                        highDpiSupport: true,     // High resolution support
                        staticZones: [
                            { strokeStyle: "#F03E3E", min: 0, max: 30 },  // Red zone
                            { strokeStyle: "#FFDD00", min: 30, max: 60 }, // Yellow zone
                            { strokeStyle: "#30B32D", min: 60, max: 100 }, // Green zone
                        ],
                        staticLabels: {
                            font: "10px sans-serif",  // Specifies font
                            labels: [0, 30, 60, 100],  // Print labels at these values
                            color: "#000000",  // Optional: Label text color
                            fractionDigits: 0  // Optional: Numerical precision
                        },
                    };

                    var target = document.getElementById('gaugeCanvas'); // Your canvas element
                    var gauge = new Gauge(target).setOptions(opts); // Create gauge!

                    gauge.maxValue = 100; // Set max gauge value
                    gauge.setMinValue(0);  // Set min gauge value
                    gauge.animationSpeed = 32; // Set animation speed (32 is default value)
                    gauge.set(response.AverageProgress); // Set gauge value dynamically


                    // Assuming you have the data received in these variables
                    var lmsresponse = {
                        InProgress: response.InProgress,
                        Completed: response.Completed,
                        YettoStart: response.YettoStart
                    };

                    var ctx = document.getElementById('myDoughnutChart').getContext('2d');

                    // Create the Doughnut chart
                    var myDoughnutChart = new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: ['In Progress', 'Completed', 'Yet to Start'],
                            datasets: [{
                                data: [lmsresponse.InProgress, lmsresponse.Completed, lmsresponse.YettoStart],
                                backgroundColor: [
                                    '#18B2BF',  // Color for In Progress
                                    '#6ABD2E',  // Color for Completed
                                    '#E717C5'   // Color for Yet to Start
                                ],
                                hoverBackgroundColor: [
                                    '#18B2BF',
                                    '#6ABD2E',
                                    '#E717C5'
                                ]
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'bottom',
                                    labels: {
                                        generateLabels: function (chart) {
                                            let data = chart.data;
                                            if (data.labels.length && data.datasets.length) {
                                                return data.labels.map(function (label, i) {
                                                    var value = data.datasets[0].data[i];
                                                    return {
                                                        text: `${value} ${label}`, // Label below the number
                                                        fillStyle: data.datasets[0].backgroundColor[i],
                                                        strokeStyle: data.datasets[0].hoverBackgroundColor[i],
                                                        lineWidth: 2,
                                                        hidden: isNaN(data.datasets[0].data[i]) || chart.getDatasetMeta(0).data[i].hidden,
                                                        index: i
                                                    };
                                                });
                                            }
                                            return [];
                                        },
                                        boxWidth: 20,   // Width of the legend color box
                                        padding: 20,    // Padding around the legend items
                                        usePointStyle: true, // Use circles instead of squares
                                        font: {
                                            size: 14 // Font size for the legend text
                                        }
                                    }
                                },
                                tooltip: {
                                    enabled: true
                                }
                            }
                        }
                    });


                    /*rev end Pallab*/

                },
                error: function (response) {
                    jAlert("Please try again later");
                }
            });
        }

    }
    //REV 13.0 End
</script>


<script>
    $(document).ready(function () {
        $('body').on('click', '.panelAnchor', function () {
            $('#panelRight').toggleClass('open');
            //if( $('#panelRight').hasClass('open') ){
            //    $('body').append('<div class="overlay"></div>');
            //}else{
            //    $('.overlay').remove();
            //}
        });
        var options = {
            chart: {
                height: 350,
                type: 'line',
            },
            series: [{
                name: 'Website Blog',
                type: 'bar',
                columnWidth: '50%',
                data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]
            },
            {
                name: 'Website 2',
                type: 'bar',
                columnWidth: '50%',
                data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160]
            },
            {
                name: 'Social Media',
                type: 'line',
                data: [250, 242, 335, 27, 443, 422, 117, 331, 222, 422, 212, 116]
            }],
            stroke: {
                width: [0, 0, 4]
            },
            title: {
                text: 'Traffic Sources'
            },
            // labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],
            xaxis: {
                type: 'datetime'
            },
            yaxis: [{
                title: {
                    text: 'Website Blog',
                },

            },
                //{
                //    opposite: true,
                //}
            ]

        }

        //var chart = new ApexCharts(
        //  document.querySelector("#mixedChart"),
        //  options
        //);

        //chart.render();
    });

</script>

<script>
    (function ($) {
        $(window).on("load", function () {
            $("#mscroll").DataTable({
                "paging": false,
                "searching": false,
                "info": false,
                "scrollY": "340px",
                "scrollCollapse": true,
            });
        });


    })(jQuery);
    $(document).ready(function () {

        // table data
        var tb1 = '';
        tb1 += '<tr class="selected"><td><img src="~/assests/images/bt3.jpg" class="img-circle mw90" /></td><td><span class="nme">Susanta Roy</span></td><td><span class="label label-success">1</span></td><td>90</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt5.jpg" class="img-circle mw90" /></td><td><span class="nme">Arun Mahato</span></td><td><span class="label label-info">2</span></td><td>82</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt2.jpg" class="img-circle mw90" /></td><td><span class="nme">Rajbir Sharma</span></td><td><span class="label label-warning">3</span></td><td>76</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt1.jpg" class="img-circle mw90" /></td><td><span class="nme">Bijay Thakur</span></td><td><span class="label label-primary">4</span></td><td>68</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt9.jpg" class="img-circle mw90" /></td><td><span class="nme">Ruby Sil</span></td><td>5</td><td>68</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt6.jpg" class="img-circle mw90" /> </td><td><span class="nme">Goutam Nandi</span></td><td>6</td><td>65</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt3.jpg" class="img-circle mw90" /></td><td><span class="nme">R Mohan</span></td><td>7</td><td>63</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt7.jpg" class="img-circle mw90" /></td><td><span class="nme">K Benugopal</span></td><td>8</td><td>57</td></tr>';
        //
        var tb1 = '';
        tb1 += '<tr class="selected"><td><img src="~/assests/images/bt1.jpg" class="img-circle mw90" /></td><td><span class="nme">Mohit Roy</span></td><td><span class="label label-success">1</span></td><td>90</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt2.jpg" class="img-circle mw90" /></td><td><span class="nme">Gurucharan Mahato</span></td><td><span class="label label-info">2</span></td><td>82</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt3.jpg" class="img-circle mw90" /></td><td><span class="nme">Anand Sharma</span></td><td><span class="label label-warning">3</span></td><td>76</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt4.jpg" class="img-circle mw90" /></td><td><span class="nme">Rohit Thakur</span></td><td><span class="label label-primary">4</span></td><td>68</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt8.jpg" class="img-circle mw90" /></td><td><span class="nme">Ruby Sil</span></td><td>5</td><td>68</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt5.jpg" class="img-circle mw90" /> </td><td><span class="nme">Goutam Nandi</span></td><td>6</td><td>65</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt6.jpg" class="img-circle mw90" /></td><td><span class="nme">R Mohan</span></td><td>7</td><td>63</td></tr>';
        tb1 += '<tr><td><img src="~/assests/images/bt7.jpg" class="img-circle mw90" /></td><td><span class="nme">K Benugopal</span></td><td>8</td><td>57</td></tr>';


        var js1 = '<div class="statsHd sl1">24.4.2019</div><ul class="statsList cc1"><li><span class="blockage">Savings Max Account</span> <span class="blckNum">35</span></li><li><span class="blockage">Senior Citizen Account</span><span class="blckNum">40</span></li><li><span class="blockage">Two Wheeler Loan</span><span class="blckNum">15</span></li></ul><div class="statsHd sl2">23.4.2019</div><ul class="statsList cc2"><li><span class="blockage">Credit Cards</span> <span class="blckNum">26</span></li><li><span class="blockage">Health & Accident Insurance</span><span class="blckNum">35</span></li><li><span class="blockage">Personal Loan</span><span class="blckNum">19</span></li></ul>';

        var js2 = '<div class="statsHd sl1">24.4.2019</div><ul class="statsList cc1"><li><span class="blockage">Savings Max Account</span> <span class="blckNum">38</span></li><li><span class="blockage">Senior Citizen Account</span><span class="blckNum">12</span></li><li><span class="blockage">Two Wheeler Loan</span><span class="blckNum">32</span></li></ul><div class="statsHd sl2">23.4.2019</div><ul class="statsList cc2"><li><span class="blockage">Credit Cards</span> <span class="blckNum">26</span></li><li><span class="blockage">Health & Accident Insurance</span><span class="blckNum">35</span></li><li><span class="blockage">Personal Loan</span><span class="blckNum">19</span></li></ul>';

        var js3 = '<div class="statsHd sl1">24.4.2019</div><ul class="statsList cc1"><li><span class="blockage">Savings Max Account</span> <span class="blckNum">35</span></li><li><span class="blockage">Senior Citizen Account</span><span class="blckNum">30</span></li><li><span class="blockage">Two Wheeler Loan</span><span class="blckNum">11</span></li></ul><div class="statsHd sl2">23.4.2019</div><ul class="statsList cc2"><li><span class="blockage">Credit Cards</span> <span class="blckNum">26</span></li><li><span class="blockage">Health & Accident Insurance</span><span class="blckNum">35</span></li><li><span class="blockage">Personal Loan</span><span class="blckNum">19</span></li></ul>';

        $('.leaderTbl > tbody > tr').click(function () {

            var rowCount = $(this).index() + 1;

            $('.leaderTbl>tbody>tr').removeClass('selected');
            $(this).addClass('selected');

            if (rowCount == 1) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js1);
            } else if (rowCount == 2) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js2);
            } else if (rowCount == 3) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js3);
            } else if (rowCount == 4) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js2);
            } else if (rowCount == 5) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js1);
            } else if (rowCount == 6) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js3);
            } else if (rowCount == 7) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js1);
            } else if (rowCount == 8) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js2);
            } else if (rowCount == 9) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js3);
            } else if (rowCount == 10) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js2);
            } else if (rowCount == 11) {
                $('.statsWrap').html('');
                $('.statsWrap').html(js1);
            }
        });



        var options = {
            chart: {
                width: 480,
                height: 350,
                type: 'pie',
            },
            labels: ['LEADS', 'VISITS', 'CLOSED'],
            fill: {
                colors: ['#01b8aa', '#374649', '#fd625e']
            },
            colors: ['#01b8aa', '#374649', '#fd625e'],
            label: {
                position: 'bottom',
            },
            series: [250, 130, 24],
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }]
        }

        //var chart = new ApexCharts(
        //    document.querySelector("#chartpie"),
        //    options
        //);

        //chart.render();

        //var options2 = {
        //    chart: {
        //        type: 'donut',
        //        width: 480,
        //        height: 350
        //    },
        //    labels: ['Qualify Lead', 'Develop', 'Propose', 'Close'],
        //    fill: {
        //        colors: ['#01b8aa', '#374649', '#f2c80f', '#fd625e']
        //    },
        //    colors: ['#01b8aa', '#374649', '#f2c80f', '#fd625e'],
        //    label: {
        //        position: 'bottom',
        //    },
        //    series: [250, 100, 30, 24],
        //    responsive: [{
        //        breakpoint: 480,
        //        options: {
        //            chart: {
        //                width: 200
        //            },
        //            legend: {
        //                position: 'bottom'
        //            }
        //        }
        //    }]
        //}

        //var chart2 = new ApexCharts(
        //     document.querySelector("#chartpie2"),
        //     options2
        // );

        //chart2.render();

        //$('.shLeader').click(function () {
        //    $('#shLeaderView').css({ 'visibility': 'visible' });
        //});

        //$('#tbsSales').click(function () {
        //    chart2.refresh();
        //});

    });
    $(document).ready(function () {
        var getTabDetail = $(".getTabDetail").val();
        if (getTabDetail == "LMS") {
            $(".mainAreaTAb .tab-pane, .tabItemsLI li").removeClass("active");
            $(".tab-pane#LMSList").addClass("active");
            $("#LMSList").addClass("active");
            $(".tab-pane#profile").addClass("hide");
        }
        /*REV 13.0 END*/
        else {
            $(".mainAreaTAb .tab-pane, .tabItemsLI li").removeClass("active");
            $(".tab-pane#profile, #tbsalesman").addClass("active");
            $(".tab-pane#profile").removeClass("hide");
        }
    })
</script>
<style>
    .multiselect-container.dropdown-menu > li > a {
        text-align: left !important;
        padding: 2px 0 !important;
    }
</style>
<script src="~/assests/js/Leavelist.js"></script>



<style>
    .tabs {
        font-size: inherit !important
    }

    .padTabl > tbody > tr > td {
        padding: 3px 10px;
    }

    #tblshoplist > thead > tr > th {
        background: #5F65AD !important;
        border-top: 1px solid #0f87cc;
        color: #fff;
    }

    #tblshoplist tbody > tr > th, #tblshoplist tfoot > tr > th, #tblshoplist thead > tr > td, #tblshoplist tbody > tr > td, #tblshoplist tfoot > tr > td {
        padding: 1px 5px !important;
    }

    .scrooler {
        width: 100%;
        overflow-x: scroll;
    }

    .w1 {
        width: 107px;
    }

    .date {
        width: 62px;
    }

    .labelTbl > tbody > tr > td {
        padding-right: 20px;
        padding-bottom: 5px;
    }

    #StateGridLookup_ET > tbody > tr > td:first-child, #ShopGridLookup_ET > tbody > tr > td:first-child, #EmpGridLookup_ET > tbody > tr > td:first-child {
        display: none;
    }

    .float-right {
        float: right;
    }

    #summary-show-btn img {
        width: 30px;
    }

    .hands:before {
        /*content: "👇";*/
        content: url('/assests/images/click-hand.png');
        font-size: 30px;
        /*transform: rotate(180deg);*/
        right: 15px;
        top: 28px;
        animation: up-down 1s infinite;
        position: absolute;
    }
    /*.details-btn .hands:before, .details-btn .hands:after {
            content: "👇";
            font-size: 40px;
            opacity: 0;
            transition: 0.4s ease-in-out;
        }*/
    /*.details-btn .hands:before {
            transform: rotate(-60deg);
            left: -45px;
            top: -10px;
        }
        .details-btn .hands:after {
            transform: rotate(170deg);
            right: 30px;
            top: 30px;
        }*/
    /*.details-btn:hover .hands:before {
            opacity: 1;
            left: -35px;
        }
        .details-btn:hover .hands:after {
            opacity: 1;
            top: 20px;
        }*/

    @@keyframes up-down {
        50% {
            margin-top: -10px;
        }
    }

    .tooltip-custom {
        max-width: 300px !important;
    }


    /*custom tooltips css*/
    /*.cust-tooltip-cls {
            color: #e91e63;
            font-family: monospace;
            white-space: nowrap;
        }

            .cust-tooltip-cls:after {
                font-family: Arial, sans-serif;
                text-align: left;
                white-space: normal;
            }

            .cust-tooltip-cls:focus {
                outline: none;
            }

    .wrap {
       background: #ECF0F1;
       color: #607D8B;
       height: 100%;
       overflow: auto;
       padding: 1em 2.5em;
       text-align: center;
       width: 100%;
    }*/




    /*== start of code for tooltips ==*/
    .tool {
        position: relative;
    }


        /*== common styles for both parts of tool tip ==*/
        .tool::before,
        .tool::after {
            left: 50%;
            opacity: 0;
            position: absolute;
            z-index: -100;
        }

        .tool:hover::before,
        .tool:focus::before,
        .tool:hover::after,
        .tool:focus::after {
            opacity: 1;
            transform: scale(1) translateY(0);
            z-index: 100;
        }


        /*== pointer tip ==*/
        .tool::before {
            border-style: solid;
            border-width: 1em 0.75em 0 0.75em;
            border-color: #2614bf transparent transparent transparent;
            bottom: 100%;
            content: "";
            margin-left: -0.5em;
            transition: all .3s cubic-bezier(.84,-0.18,.31,1.26), opacity .3s .5s;
            transform: scale(.6) translateY(-90%);
            top: -20px;
        }

        .tool:hover::before,
        .tool:focus::before {
            transition: all .65s cubic-bezier(.84,-0.18,.31,1.26) .2s;
        }


        /*== speech bubble ==*/
        .tool::after {
            background: #2614bf;
            border-radius: .25em;
            bottom: 180%;
            color: #EDEFF0;
            content: attr(data-tip);
            margin-left: -16.75em;
            padding: 8px 12px;
            transition: all .3s cubic-bezier(.84,-0.18,.31,1.26) .2s;
            transform: scale(.6) translateY(50%);
            width: 275px;
        }

        .tool:hover::after,
        .tool:focus::after {
            transition: all .3s cubic-bezier(.84,-0.18,.31,1.26);
        }

    /*rev Pallab*/

    .lmsgrid-show-hide-btn {
        position: relative;
    }

        .lmsgrid-show-hide-btn button {
            position: absolute;
            right: 0px;
            top: -44px;
            border-radius: 10px;
            /* width: 40px;*/
            height: 40px;
            text-align: center;
            line-height: 34px;
            background: #a16612;
            color: #fff;
            border: none;
            padding: 0px 12px;
        }

    #gaugeCanvas {
        width: 100%;
        height: 250px;
    }

    #myDoughnutChart {
        width: 100%;
        height: 290px;
    }

    #lblAverageProgress {
        font-size: 22px;
        font-weight: 600;
        color: #111;
        min-height: 32px;
    }

    .info-tooltip-ap {
        width: 24px;
        height: 24px;
        background: #4785e9;
        border-radius: 50px;
        padding: 2px 4px;
        display: block;
        margin-left: 10px;
        /* line-height: 20px; */
        box-sizing: border-box;
        cursor: pointer;
        transition: all .3s ease-in-out;
    }

        .info-tooltip-ap:hover {
            background: ##194996;
        }

        .info-tooltip-ap img {
            width: 100%;
        }

    .avg-prog-ftr {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip {
        visibility: hidden;
        width: 296px;
        background-color: #7a0d8f;
        color: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 8px 10px;
        position: absolute;
        z-index: 99;
        bottom: 130%;
        left: 46%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -10px;
            border-width: 10px;
            border-style: solid;
            border-color: #7a0d8f transparent transparent transparent;
        }

    .tooltip-container:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    /*rev end Pallab*/
    @@media (max-width: 760px) {
        .tool::after {
            font-size: .75em;
            margin-left: -5em;
            width: 10em;
        }
    }

    #gridLoader {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #ffffffa3;
        font-size: 50px;
        color: black;
        z-index: 999999;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    @@media screen and (max-width: 540px) {
        #griddashboard > tbody > tr > td > .dxgvCSD {
            /*width: 304px !important;*/
            width: 1100px !important;
        }

        #collapseOne.backBox > div {
            overflow-x: auto !important;
        }
    }
</style>
<!--Leave list end-->

<script>
    $(document).ready(function () {
        // Function to update the button based on grid visibility
        function updateButtonState() {
            var gridDetails = $('#griddetailsLMS');
            var toggleButton = $('#toggle-show-hide');

            if (gridDetails.is(':hidden')) {
                // Grid is hidden, update button to "Show Grid" with down arrow
                toggleButton.find('i').removeClass('fa-chevron-up').addClass('fa-chevron-down');
                toggleButton.find('span').text('Show Data');
            } else {
                // Grid is visible, update button to "Hide Grid" with up arrow
                toggleButton.find('i').removeClass('fa-chevron-down').addClass('fa-chevron-up');
                toggleButton.find('span').text('Hide Data');
            }
        }

        // Initial button state update when the page loads
        updateButtonState();

        // Button click to toggle grid visibility with slide animation
        $('#toggle-show-hide').click(function () {
            var gridDetails = $('#griddetailsLMS');

            // Slide toggle the grid's visibility with animation
            gridDetails.slideToggle("slow", function () {
                // Update the button state after the slide toggle completes
                updateButtonState();
            });
        });

        // Periodically check and update the button state to ensure consistency
        setInterval(updateButtonState, 1000);
    });




    /*rev end Pallab*/

</script>

<div id="gridLoader" class="loader" style="display: none;">
    <img src="~/assests/images/loader-img.gif" />
</div>

@if (Model.DashboardSettingMappedList != null)
{
    if (Model.DashboardSettingMappedList.Count() > 0)
    {

<div class="breadCumb">
    <span>Dashboard</span>
</div>
<div class="panel-heading hide">
    <div class="panel-title clearfix">
        <h3 class="pull-left">  </h3>
        <div class="pull-right">
            <table class="dateT">
                <tr class="hide">
                    <td><span class="">Show For</span></td>
                    <td><label id="lblDate"></label></td>
                    <td style="display:none;">
                        @Html.DevExpress().DateEdit(
                settings =>
                {
                    settings.Name = "dtPayFrom";
                    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    settings.Properties.DisplayFormatString = "dd-MM-yyyy";
                    settings.Properties.EditFormatString = "dd-MM-yyyy";
                    settings.Properties.EditFormat = EditFormat.Custom;
                    settings.Properties.UseMaskBehavior = true;
                    settings.Properties.ShowOutOfRangeWarning = false;
                    settings.ClientEnabled = false;
                }).GetHtml()
                    </td>
                </tr>
                <tr>
                    <td><span class="">Select State</span></td>
                    <td><label id="lblDate"></label></td>
                    <td></td>
                </tr>
            </table>
        </div>
    </div>
</div>
    }
}

<input type="hidden" id="hdnPermissionLevel" value="@(ViewBag.PermissionLevel == null ? "" : ViewBag.PermissionLevel)" />
<input type="hidden" id="hdnGridEmployeeAttendanceSummaryGroupBy" value="@Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["GridEmployeeAttendanceSummaryGroupBy"])" />
<input type="hidden" id="hdnGridStatewiseSummaryGroupBy" value="@Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["GridStatewiseSummaryGroupBy"])" />

@if (Model.DashboardSettingMappedList != null)
{
    if (Model.DashboardSettingMappedList.Count() > 0)
    {
        if (Model.DashboardSettingMappedList.Where(x => x.DetailsName == "LMS").Count() > 0)
        {
            <input type="hidden" class="getTabDetail" value="LMS" />
        }
        else
        {
            <input type="hidden" class="getTabDetail" value="Visit" />
        }

        <input type="hidden" id="hdnLMS" value="@Model.DashboardSettingMappedList.Where(x => x.DetailsName == "LMS").Count()" />

        //new Layout ContentControl area
<div class="container">

    <section class="clearfix">
        <div class="tabs tabs-style-shape">
            <nav>
                <ul role="tablist" class="tabItemsLI">
                    @if (Model.DashboardSettingMappedList.Where(x => x.DetailsName == "LMS").Count() > 0)
                            {
                    <li role="presentation" id="tbs7" class="shLeader">
                        <a href="#LMSList" class="" aria-controls="LMSList" role="tab" data-toggle="tab">
                            <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                            <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                            <span class="shLeader">LMS</span>
                        </a>
                    </li>
                            }
                    <li></li>
                </ul>
            </nav>
            <div class="tab-content mainAreaTAb">
                
                @*REV LMS Priti*@
                @if (Model.DashboardSettingMappedList.Where(x => x.DetailsName == "LMS").Count() > 0)
                        {
                <div role="tabpanel" class="tab-pane active" id="LMSList">

                    <div class="">
                        @Html.Action("DashboardLMS", new { list = Model.DashboardSettingMappedList })
                    </div>
                    <div class="lmsgrid-show-hide-btn">
                        <button id="toggle-show-hide" style="display:none"><i class="fa fa-chevron-up" aria-hidden="true"></i> <span></span></button>
                    </div>
                    <div class="">
                        <div class="row " id="griddetailsLMS">
                            <div class="col-md-12">
                                <div class=" hide noShaded" id="dashDetailsLMS">
                                    <div class="" id="accordion" role="tablist" aria-multiselectable="true">
                                        <div class="">
                                            <div class="panel-heading row" role="tab" id="headingOne">
                                                <h4 class="Widgheading relative" aria-expanded="true" aria-controls="collapseOne">
                                                    <span id="griddetailsHeadedtextLMS" class="f6 translate-y-big"></span>
                                                    <span class="btn-excel" data-toggle="tooltip" title="Export To Excel">
                                                        <span class="translate-y hide">Export To Excel</span>
                                                        <span class="icn"><img src="/assests/images/excel.png" style="width: 24px;" title="" onclick="LMSgriddashboardgridviewexport()" /></span>
                                                    </span>
                                                    <span class="btn-prime">REFRESH</span>
                                                    @*rev 15.0*@
                                                    @*<span id="backSpn" class="closeAcDetails clstyle"><i class="fa fa-arrow-left"></i> </span>*@
                                                    @*rev 15.0 END*@
                                                </h4>
                                            </div>
                                            <div id="collapseOne" class="backBox p-3" role="tabpanel" aria-labelledby="headingOne">
                                                <div id="gridContainerLMS overflx">
                                                    @Html.Partial("DashBoardGVLMS", new System.Data.DataTable())
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>



                    <div class="row">
                        <div class="col-md-6">
                            <div class="box-holder mTop10 box-full lms-chart-box" style="display: none;">
                                @*<span class="toggleFullScreen" data-toggle="tooltip" data-placement="bottom" title="Toggle Fullscreen">*@
                                <span class="toggleFullScreen" data-toggle="tooltip" data-placement="bottom" title="Maximize">
                                    @*<i class="fa fa-arrows-alt" aria-hidden="true"></i>*@
                                    <img src="/assests/images/maximize.png" />
                                </span>
                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="hdd-rp">
                                                Average Progress
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bxd-cont">
                                    <div class="row">
                                        <div class="col-md-12 text-center">

                                            @*<div id="" class="chartHolder font-normal"><div class="nCheck">Select date to refresh data</div></div>*@
                                            @*<div id="gauge" style="width:100%;"></div>*@
                                            <canvas id="gaugeCanvas"></canvas>
                                            <div class="avg-prog-ftr">
                                                <div class="Numb" id="lblAverageProgress"></div>
                                                <div class="info-tooltip-ap tooltip-container">
                                                    <img src="~/assests/images/info-i.svg" />
                                                    <div class="tooltip">(In Progress Topics / Assigned Topics) * 100</div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="box-holder mTop10 box-full lms-chart-box" style="display: none;">
                                @*<span class="toggleFullScreen" data-toggle="tooltip" data-placement="bottom" title="Toggle Fullscreen">*@
                                <span class="toggleFullScreen" data-toggle="tooltip" data-placement="bottom" title="Maximize">
                                    @*<i class="fa fa-arrows-alt" aria-hidden="true"></i>*@
                                    <img src="/assests/images/maximize.png" />
                                </span>
                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="hdd-rp">
                                                In Progress Vs Completed Vs Yet to Start
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bxd-cont">
                                    <div class="row">
                                        <div class="col-md-12">
                                            @*<div id="" class="chartHolder font-normal"><div class="nCheck">Select date to refresh data</div></div>*@
                                            <canvas id="myDoughnutChart"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                        }
                @*REV LMS Priti*@
            </div>
        </div>
    </section>
</div>

<div class="hide">
    <svg class="hidden">
        <defs>
            <path id="tabshape" d="M80,60C34,53.5,64.417,0,0,0v60H80z" />
        </defs>
    </svg>
    <section class="clearfix">
        <div class="tabs tabs-style-shape">
            <nav>
                <ul role="tablist">
                    @*<li class="active" role="presentation">
                            <a href="#home" class="" aria-controls="home" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Attendance </span>
                            </a>
                        </li>*@

                    <!-- please uncomment this section for static dashboard value salesman & distributor-->
                    @*<li role="presentation" id="tbsalesman">
                            <a href="#profile" class="" aria-controls="profile" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Sales Person</span>
                            </a>
                        </li>
                        <li role="presentation" id="tbsP" class="shLeader">
                            <a href="#Leaderboard" class="" aria-controls="Leaderboard" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span class="shLeader">Leaderboard</span>
                            </a>
                        </li>

                        <li role="presentation" id="tbsSales">
                            <a href="#salesmanPerformance" class="" aria-controls="salesmanPerformance" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Salesman Performance</span>
                            </a>
                        </li>
                        <li role="presentation" id="productPerf">
                            <a href="#productPerformance" class="" aria-controls="productPerformance" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Product Performance</span>
                            </a>
                        </li>
                        <li role="presentation" id="customerAna">
                            <a href="#customerAnalytics" class="" aria-controls="customerAnalytics" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Customer Analytics</span>
                            </a>
                        </li>
                        <li role="presentation" id="competitorAna">
                            <a href="#competitorAnalytics" class="" aria-controls="competitorAnalytics" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Competitor Analytics</span>
                            </a>
                        </li>*@
                    @*<li role="presentation" id="tbdistributor">
                            <a href="#messages" class="" aria-controls="messages" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>Distributor</span>
                            </a>
                        </li>*@
                    @*<li role="presentation">
                            <a href="#mis" class="" aria-controls="messages" role="tab" data-toggle="tab">
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <svg viewBox="0 0 80 60" preserveAspectRatio="none"><use xlink:href="#tabshape"></use></svg>
                                <span>MIS</span>
                            </a>
                        </li>*@
                    <!-- please uncomment this section for static dashboard value salesman & distributor End -->
                </ul>
            </nav>
            
        </div><!-- /tabs -->
    </section>
    <div class="clear"></div>


</div>
    }
}

<script>

    function NoFileAlert() {

        jAlert('No data for export');
    }

    function mapcloseclick() {
        $("#map").addClass("hide");
    }



    var objData = {};
    


</script>
